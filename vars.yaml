---
- hosts: localhost
  gather_facts: false
  vars_files:
    - vars.yaml

  tasks:
    - name: Provision instance
      ec2:
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        key_name: mykeypair
        group: launch-wizard-14
        instance_type: t2.micro
        image: ami-0010d386b82bc06f0
        wait: yes
        count: 1
        region: us-east-2
      register: ec2_out
    - name: Wait for instances to come online#
      wait_for:
        host={{item.public_ip}}
        port=22
        delay=60
        timeout=320
        state=started
      with_items: "{{ec2_out.instances}}"
    - name: Adding to ansible hosts
      add_host: hostname={{item.public_ip}} groups=ec2hosts
      with_items: "{{ec2_out.instances}}"


- name: configure ec2hosts
  gather_facts: false
  hosts: ec2hosts
  vars:
    ansible_ssh_common_args: '-o StrictHostKeyChecking=no -i mykeypair.pem'
  remote_user: ubuntu
#  become: true
#  become_method: sudo
  sudo: yes
  tasks:
    - name: symlink /usr/bin/python -> /usr/bin/python3
      raw: |
        if [ -f /usr/bin/python3 ] && [ ! -f /usr/bin/python ]; then
          ln --symbolic /usr/bin/python3 /usr/bin/python; 
        fi
      become: true 
    - name: clone git repo
      git:
        repo: https://github.com/sateeshtvd/app.git
        dest: /home/ubuntu/app

    - name: install docker
      apt: name=docker.io state=present update_cache=true

    - name: build docker image from cloned git repo
#      docker_image:
#        name: mysite
#        build:
#          path: /home/ubuntu/app
#          source: build
#        state: present
      command: docker build /home/ubuntu/app -t mysite

    - name: run the container
      command: docker run -it -d -p 81:8080 mysite

